#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Author: kenzo
# Blog: https://github.com/kenzok8
#=================================================

name: passwall

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - '.config'
  #schedule:
  #  - cron: 0 2 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检查
      uses: actions/checkout@master

    - name: 初始化环境 
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 释放磁盘空间
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: 克隆源代码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更新安装提要
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
      
    - name: 自定义安装源
      working-directory: ./openwrt
      run: |
        git clone https://github.com/kenzok8/litte package/litte
        git clone https://github.com/kenzok8/small
        git clone https://github.com/kenzok8/openwrt-packages
        git clone https://github.com/Lienol/openwrt-package
        git clone https://github.com/fw876/helloworld
        git clone https://github.com/openwrt-develop/luci-theme-atmaterial
        git clone https://github.com/vernesong/OpenClash
        git clone https://github.com/tty228/luci-app-serverchan
        git clone https://github.com/rufengsuixing/luci-app-adguardhome
        git clone https://github.com/pymumu/luci-app-smartdns
       #git clone https://github.com/pymumu/openwrt-smartdns
        git clone -b 18.06  https://github.com/jerrykuku/luci-theme-argon
        
    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: SSH连接操作
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: 下载dl文件包
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s
        echo "::set-output name=status::success"

    - name: 组装固件
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/

    - name : 上传固件
      uses: actions/upload-artifact@master
      with:
        name: passwall-x32
        path: openwrt/bin
        # path: ./artifact/
